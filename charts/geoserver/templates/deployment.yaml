apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "geoserver.fullname" . }}
  labels:
    {{- include "geoserver.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "geoserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "geoserver.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}-sidecar
        image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
        imagePullPolicy: {{ .Values.sidecar.image.pullPolicy }}
        volumeMounts:
        {{- if .Values.pvc.rasters.enabled }}
          - mountPath: "/rasters_data"
            name: {{ .Values.pvc.rasters.name }}
        {{- end }}
        {{- if .Values.pvc.netcdf.enabled }}
          - mountPath: "/netcdf_data"
            name: {{ .Values.pvc.netcdf.name }}
        {{- end }}
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ include "geoserver.fullname" . }}
              key: aws-access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "geoserver.fullname" . }}
              key: aws-secret-access-key
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
          - mountPath: "/geoserver_data/data"
            name:  {{ .Values.pvc.remote.name }}
          {{- if .Values.pvc.rasters.enabled }}
          - mountPath: "/rasters_data"
            name: {{ .Values.pvc.rasters.name }}
          {{- end }}
          {{- if .Values.pvc.netcdf.enabled }}
          - mountPath: "/netcdf_data"
            name: {{ .Values.pvc.netcdf.name }}
          {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
          protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /geoserver/index.html
            port: http
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /geoserver/index.html
            port: http
        {{- end }}
      volumes:
        - name: {{ .Values.pvc.remote.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.remote.name }}
        {{- if .Values.pvc.rasters.enabled }}
        - name: {{ .Values.pvc.rasters.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.rasters.name }}
        {{- end }}
        {{- if .Values.pvc.netcdf.enabled }}
        - name: {{ .Values.pvc.netcdf.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.pvc.netcdf.name }}
        {{- end }}

